{"version":3,"sources":["containers/AccountSecurity/AccountSecurity.module.css","component/FormContainer/PersonalInfoForm/PersonalInfoForm.js","component/FormContainer/AddressForm/AddressForm.js","containers/AccountSecurity/AccountSecurity.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","component/Input/Input.js","component/Input/Input.module.css","component/FormContainer/PersonalInfoForm/PersonalInfoForm.module.css","component/FormContainer/AddressForm/AddressForm.module.css"],"names":["module","exports","PersonalInfoForm","props","setEditable","placeholders","loginData","useUser","useState","loading","message","formState","setFormState","fullName","useInputData","phoneNumber","Button","text","classFromProps","classes","ButtonOk","onClick","a","prev","fetchService","token","value","response","ok","personalInfo","newFetch","Input","label","placeholder","style","marginBottom","className","Message","color","succeed","Spinner","AddressForm","state","city","zipCode","street","streetNumber","address","AccountSecurity","handleLogoutAll","securityState","setSecurityState","editable","info","userInfo","setUserInfo","setLoading","history","useHistory","useEffect","then","data","infoCompleted","addressCompleted","timer","setTimeout","clearTimeout","userInfoData","key","push","Fragment","capitalizeName","Text","LoadingText","userAddressData","Head","Container","Section","Title","PersonalInfoContainer","margin","ButtonEdit","email","AddressContainer","ButtonsContainer","height","_objectWithoutProperties","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","type","isValid","error","rest","check","borderBottom","InputContainer","htmlFor","id","Tooltip","TooltipText","join"],"mappings":"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","file":"static/js/3.bcbd15aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Head\":\"AccountSecurity_Head__R2Rho\",\"Container\":\"AccountSecurity_Container__3MYu3\",\"Section\":\"AccountSecurity_Section__3AQj7\",\"Title\":\"AccountSecurity_Title__3yRtl\",\"ButtonEdit\":\"AccountSecurity_ButtonEdit__1t7_G\",\"ButtonOk\":\"AccountSecurity_ButtonOk__Ka0V7\",\"ButtonsContainer\":\"AccountSecurity_ButtonsContainer__2Qkiy\",\"Button\":\"AccountSecurity_Button__1rdBK\",\"Message\":\"AccountSecurity_Message__3khcw\",\"PersonalInfoContainer\":\"AccountSecurity_PersonalInfoContainer__1PtzP\",\"AddressContainer\":\"AccountSecurity_AddressContainer__1ECHk\",\"Text\":\"AccountSecurity_Text__2yJe1\"};","import React, { useState } from \"react\";\n\nimport { useInputData } from \"../../../utils/customHooks\";\nimport { useUser } from \"../../../context/userContext\";\nimport { fetchService } from \"../../../utils/fetchServices\";\nimport Input from \"../../Input/Input\";\nimport Button from \"../../Button/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport classes from \"./PersonalInfoForm.module.css\";\n\nconst PersonalInfoForm = (props) => {\n  /*\nRecives:\n -setEditable: set editable to false when the form is successfully submited\n -placeholders: placeholders for inputs\n*/\n  const { setEditable, placeholders } = props;\n\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData } = useUser();\n\n  // form state\n  const [formState, setFormState] = useState({\n    loading: false,\n    message: null,\n  });\n\n  // customHook useInputData returns: type, value, onChange handler, isValid and validation errors\n  const fullName = useInputData(\"name\", true);\n  const phoneNumber = useInputData(\"number\", true); //second argument true for validation\n\n  return (\n    <>\n      <Button\n        text=\"ok\"\n        classFromProps={classes.ButtonOk}\n        onClick={\n          // allows on click when loading = false\n          !formState.loading\n            ? async () => {\n                setFormState((prev) => ({ ...prev, loading: true }));\n\n                const response = await fetchService(\n                  \"put\",\n                  \"users/user-details\",\n                  loginData.token,\n                  {\n                    fullName: fullName.value,\n                    phoneNumber: phoneNumber.value,\n                  }\n                );\n\n                if (response.ok) {\n                  // if fetch succeeds, sets form editable = false\n                  return setEditable((prev) => ({\n                    ...prev,\n                    personalInfo: false,\n                    newFetch: true,\n                  }));\n                }\n\n                // if fetch fails, sets message\n                setFormState({\n                  loading: false,\n                  message: response.message,\n                });\n              }\n            : null\n        }\n      />\n      <Input\n        {...fullName}\n        label=\"Full Name:\"\n        placeholder={placeholders.fullName}\n      />\n      <br style={{ marginBottom: \"3rem\" }} />\n\n      <Input\n        {...phoneNumber}\n        label=\"Phone Number:\"\n        placeholder={placeholders.phoneNumber}\n      />\n      <br style={{ marginBottom: \"3rem\" }} />\n\n      <p\n        className={classes.Message}\n        style={{ color: formState.succeed ? \"green\" : \"red\" }}\n      >\n        {/* if loading shows spinner, else shows message */}\n        {formState.loading ? <Spinner /> : formState.message}\n      </p>\n    </>\n  );\n};\n\nexport default PersonalInfoForm;\n","import React, { useState } from \"react\";\n\nimport { useInputData } from \"../../../utils/customHooks\";\nimport { useUser } from \"../../../context/userContext\";\nimport { fetchService } from \"../../../utils/fetchServices\";\nimport Input from \"../../Input/Input\";\nimport Button from \"../../Button/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport classes from \"./AddressForm.module.css\";\n\nconst AddressForm = (props) => {\n  /*\nRecives:\n -setEditable: set editable to false when the form is successfully submited\n -placeholders: placeholders for inputs\n*/\n  const { setEditable, placeholders } = props;\n\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData } = useUser();\n\n  // form state\n  const [formState, setFormState] = useState({\n    loading: false,\n    message: null,\n  });\n\n  // customHook useInputData returns: type, value, onChange handler, isValid and validation errors\n  const state = useInputData(\"name\");\n  const city = useInputData(\"name\");\n  const zipCode = useInputData(\"number\", true); //second argument true for validation\n  const street = useInputData(\"name\");\n  const streetNumber = useInputData(\"number\", true); //second argument true for validation\n\n  return (\n    <>\n      <Button\n        text=\"ok\"\n        classFromProps={classes.ButtonOk}\n        onClick={\n          // allows on click when loading = false\n          !formState.loading\n            ? async () => {\n                setFormState({ loading: true });\n\n                const response = await fetchService(\n                  \"put\",\n                  \"users/user-details\",\n                  loginData.token,\n                  {\n                    state: state.value,\n                    city: city.value,\n                    zipCode: zipCode.value,\n                    street: street.value,\n                    streetNumber: streetNumber.value,\n                  }\n                );\n\n                if (response.ok) {\n                  // if fetch succeeds, sets form editable = false\n                  return setEditable((prev) => ({\n                    ...prev,\n                    address: false,\n                    newFetch: true,\n                  }));\n                }\n\n                // if fetch fails, sets message\n                setFormState({\n                  loading: false,\n                  message: response.message,\n                });\n              }\n            : null\n        }\n      />\n\n      <Input {...state} label=\"State:\" placeholder={placeholders.state} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input {...city} label=\"City:\" placeholder={placeholders.city} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input\n        {...zipCode}\n        label=\"Zip Code:\"\n        placeholder={placeholders.zipCode}\n      />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input {...street} label=\"Street:\" placeholder={placeholders.street} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input\n        {...streetNumber}\n        label=\"Street Number:\"\n        placeholder={placeholders.streetNumber}\n      />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <p className={classes.Message} style={{ color: \"red\" }}>\n        {/* if loading shows spinner, else shows message */}\n        {formState.loading ? <Spinner /> : formState.message}\n      </p>\n    </>\n  );\n};\n\nexport default AddressForm;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useUser } from \"../../context/userContext\";\nimport { fetchService } from \"../../utils/fetchServices\";\nimport { capitalizeName } from \"../../utils/helpers\";\nimport Button from \"../../component/Button/Button\";\nimport Spinner from \"../../component/UI/Spinner/Spinner\";\nimport PersonalInfoForm from \"../../component/FormContainer/PersonalInfoForm/PersonalInfoForm\";\nimport AddressForm from \"../../component/FormContainer/AddressForm/AddressForm\";\nimport LoadingText from \"../../component/UI/LoadingText/LoadingText\";\nimport classes from \"./AccountSecurity.module.css\";\n\nconst AccountSecurity = () => {\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData, handleLogoutAll } = useUser();\n\n  // succeed and message state for logout all\n  const [securityState, setSecurityState] = useState({\n    succeed: false,\n    message: null,\n    loading: false,\n  });\n\n  // edit info state\n  const [editable, setEditable] = useState({\n    personalInfo: false,\n    address: false,\n    newFetch: true,\n    loading: false,\n  });\n\n  // user info state\n  const [userInfo, setUserInfo] = useState({ info: {}, address: {} });\n\n  // loading state for first render\n  const [loading, setLoading] = useState(true);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    // only performs fetch when editable.newFetch = true\n    if (editable.newFetch) {\n      // set loading = true\n      setEditable((prev) => ({ ...prev, loading: true }));\n\n      // fetch user details and set userInfo, and editable state\n      if (loginData.token) {\n        fetchService(\"get\", \"users/user-details\", loginData.token).then(\n          (data) => {\n            setUserInfo({ info: data.info, address: data.address });\n            setEditable({\n              newFetch: false,\n              personalInfo: !data.infoCompleted,\n              address: !data.addressCompleted,\n              loading: false,\n            });\n            setLoading(false);\n          }\n        );\n      }\n    }\n  }, [loginData.token, editable.newFetch]);\n\n  useEffect(() => {\n    if (securityState.message) {\n      // clears message after 3s\n      const timer = setTimeout(() => {\n        setSecurityState({ succeed: false, message: null });\n      }, 3000);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [securityState.message]);\n\n  // user info to render\n  const userInfoData = [];\n  for (const key in userInfo.info) {\n    userInfoData.push(\n      <React.Fragment key={key}>\n        <div>\n          <p>{capitalizeName(key)}:</p>\n          <p className={classes.Text}>\n            {editable.loading ? <LoadingText /> : userInfo.info[key]}\n          </p>\n        </div>\n        <br style={{ marginBottom: \"3rem\" }} />\n      </React.Fragment>\n    );\n  }\n\n  // user address to render\n  const userAddressData = [];\n  for (const key in userInfo.address) {\n    userAddressData.push(\n      <React.Fragment key={key}>\n        <div>\n          <p>{capitalizeName(key)}:</p>\n          <p className={classes.Text}>\n            {editable.loading ? <LoadingText /> : userInfo.address[key]}\n          </p>\n        </div>\n        <br style={{ marginBottom: \"3rem\" }} />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <>\n      <div className={classes.Head}></div>\n\n      <div className={classes.Container}>\n        {/* personal info section */}\n        <div className={classes.Section}>\n          <h3 className={classes.Title}>Personal Data</h3>\n          <div className={classes.PersonalInfoContainer}>\n            {loading ? (\n              <div style={{ margin: \"auto\" }}>\n                <Spinner />\n              </div>\n            ) : editable.personalInfo ? (\n              <PersonalInfoForm\n                // sends userInfo as placeholders when editing\n                placeholders={{\n                  ...userInfo.info,\n                }}\n                setEditable={setEditable}\n              />\n            ) : (\n              <>\n                <Button\n                  text=\"edit\"\n                  classFromProps={classes.ButtonEdit}\n                  onClick={() => {\n                    // shows personalInfo form\n                    setEditable((prev) => ({\n                      ...prev,\n                      personalInfo: true,\n                    }));\n                  }}\n                />\n\n                {userInfoData}\n                <div>\n                  <p>Email:</p>\n                  <p className={classes.Text}>\n                    {editable.loading ? <LoadingText /> : loginData.email}\n                  </p>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* address section */}\n        <div className={classes.Section}>\n          <h3 className={classes.Title}>Address Data</h3>\n          <div className={classes.AddressContainer}>\n            {loading ? (\n              <div style={{ margin: \"auto\" }}>\n                <Spinner />\n              </div>\n            ) : editable.address ? (\n              <AddressForm\n                // sends userInfo as placeholders when editing\n                placeholders={{\n                  ...userInfo.address,\n                }}\n                setEditable={setEditable}\n              />\n            ) : (\n              <>\n                <Button\n                  text=\"edit\"\n                  classFromProps={classes.ButtonEdit}\n                  onClick={() => {\n                    // shows address form\n                    setEditable((prev) => ({\n                      ...prev,\n                      address: true,\n                    }));\n                  }}\n                />\n                {userAddressData}\n                <span style={{ marginBottom: \"3.5rem\" }} />\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* security section */}\n        <div className={classes.Section}>\n          <h3 className={classes.Title}>Security</h3>\n          {/* buttons container */}\n          <div className={classes.ButtonsContainer}>\n            {/* logoutAll button */}\n            <div style={{ height: \"min-content\" }}>\n              <Button\n                text=\"Logout from other devices\"\n                classFromProps={classes.Button}\n                onClick={\n                  // alows onClick when loading = false\n                  !securityState.loading\n                    ? async () => {\n                        setSecurityState((prev) => ({\n                          ...prev,\n                          loading: true,\n                        }));\n                        const response = await handleLogoutAll();\n                        setSecurityState({\n                          succeed: response.succeed,\n                          message: response.message,\n                          loading: false,\n                        });\n                      }\n                    : null\n                }\n              />\n\n              {/* message */}\n              <p\n                className={classes.Message}\n                style={{ color: securityState.succeed ? \"green\" : \"red\" }}\n              >\n                {securityState.loading ? <Spinner /> : securityState.message}\n              </p>\n            </div>\n\n            {/* show changePass form button */}\n            <Button\n              text=\"Change password\"\n              classFromProps={classes.Button}\n              onClick={() => {\n                history.push(\"/app/security/change\");\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AccountSecurity;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst Input = (props) => {\n  /*\nRecives:\n -tpye: input type\n -label : input label text\n -isValid: validation checked\n -error: array of validation errors\n -rest: input value and onChange handler\n*/\n  const { type, label, isValid, error, ...rest } = props;\n\n  // add style if recives isValid\n  let check = {};\n  if (isValid === true) {\n    check = { borderBottom: \"2px solid blue\" };\n  } else if (isValid === false) {\n    check = { borderBottom: \"2px solid red\" };\n  }\n\n  switch (type) {\n    case \"email\":\n      //Input type email\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor=\"email\">{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id=\"email\"\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"number\":\n      //Input type number\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={\"text\"}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"password\":\n      //Input type password\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    default:\n      //Input type text\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            type=\"text\"\n            {...rest} //input value and onChange atributes\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Input_InputContainer__3-grW\",\"Input\":\"Input_Input__bZUEZ\",\"Tooltip\":\"Input_Tooltip__1uJvh\",\"TooltipText\":\"Input_TooltipText__1VF9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"PersonalInfoForm_Message__26Rgw\",\"ButtonOk\":\"PersonalInfoForm_ButtonOk__39O1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"AddressForm_Message__1OF2m\",\"ButtonOk\":\"AddressForm_ButtonOk__2spyR\"};"],"sourceRoot":""}