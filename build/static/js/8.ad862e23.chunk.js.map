{"version":3,"sources":["component/FormContainer/SignUpForm/SignUpForm.js","component/FormContainer/FormContainer.js","component/FormContainer/FormContainer.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","component/Input/Input.js","component/Input/Input.module.css","component/FormContainer/SignUpForm/SignUpForm.module.css"],"names":["SignUpForm","useState","message","loading","succeed","signupData","setSignupData","name","useInputData","email","password","useEffect","timer","setTimeout","prevState","clearTimeout","handleSubmit","e","a","preventDefault","fetchService","value","response","ok","onChange","target","label","style","marginBottom","className","classes","Message","color","checkMail","text","classFromProps","isValid","Button","ButtonDisabled","onClick","FormContainer","props","Background","children","module","exports","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Input","type","error","rest","check","borderBottom","InputContainer","htmlFor","id","Tooltip","TooltipText","join"],"mappings":"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","file":"static/js/8.ad862e23.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { fetchService } from \"../../../utils/fetchServices\";\nimport { useInputData } from \"../../../utils/customHooks\";\nimport Input from \"../../Input/Input\";\nimport Button from \"../../Button/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport FormContainer from \"../FormContainer\";\nimport classes from \"./SignUpForm.module.css\";\n\nconst SignUpForm = () => {\n  // Signup state\n  const [signupData, setSignupData] = useState({\n    message: null,\n    loading: false, //when true shows spinner\n    succeed: false, //When true shows switch to login button\n  });\n\n  // customHook useInputData returns: type, value, onChange handler, isValid and validation errors\n  const name = useInputData(\"name\", true); //second argument true for validation\n  const email = useInputData(\"email\", true); //second argument true for validation\n  const password = useInputData(\"password\", true); //second argument true for validation\n\n  useEffect(() => {\n    // clears message after 3s\n    const timer = setTimeout(() => {\n      setSignupData((prevState) => ({ ...prevState, message: null }));\n    }, 3000);\n    return function () {\n      clearTimeout(timer);\n    };\n  }, [signupData.message]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSignupData((prevState) => ({\n      ...prevState,\n      loading: true,\n    }));\n\n    // Sends request with signup data\n    const response = await fetchService(\"post\", \"users\", null, {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    });\n    setSignupData((prevState) => ({\n      ...prevState,\n      message: response.message,\n      loading: false,\n      succeed: response.ok,\n    }));\n    if (response.ok) {\n      name.onChange({ target: { value: \"\" } });\n      email.onChange({ target: { value: \"\" } });\n      password.onChange({ target: { value: \"\" } });\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Input {...name} label={\"User name\"} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input {...email} label={\"Email\"} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input {...password} label={\"Password\"} />\n      <p\n        className={classes.Message}\n        style={{ color: signupData.succeed ? \"green\" : \"red\" }}\n      >\n        {signupData.loading ? <Spinner /> : signupData.message}\n      </p>\n\n      {/* if succeed shows check email message, else show sign up button */}\n      {signupData.succeed ? (\n        <p className={classes.checkMail}>Check your mail!</p>\n      ) : (\n        <Button\n          text=\"Sign Up\"\n          classFromProps={\n            email.isValid && password.isValid && name.isValid\n              ? classes.Button\n              : classes.ButtonDisabled\n          }\n          onClick={\n            // allows onClick when email, password and name input are valid, and loading = false\n            email.isValid &&\n            password.isValid &&\n            name.isValid &&\n            !signupData.loading\n              ? handleSubmit\n              : (e) => e.preventDefault()\n          }\n        />\n      )}\n    </FormContainer>\n  );\n};\n\nexport default SignUpForm;\n","import React from \"react\";\n\nimport classes from \"./FormContainer.module.css\";\n\nconst FormContainer = (props) => {\n  return (\n    <>\n      <div className={classes.Background}></div>\n      <form className={classes.FormContainer}>{props.children}</form>\n    </>\n  );\n};\n\nexport default FormContainer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"FormContainer_Background__2lPQo\",\"FormContainer\":\"FormContainer_FormContainer__1rPIB\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst Input = (props) => {\n  /*\nRecives:\n -tpye: input type\n -label : input label text\n -isValid: validation checked\n -error: array of validation errors\n -rest: input value and onChange handler\n*/\n  const { type, label, isValid, error, ...rest } = props;\n\n  // add style if recives isValid\n  let check = {};\n  if (isValid === true) {\n    check = { borderBottom: \"2px solid blue\" };\n  } else if (isValid === false) {\n    check = { borderBottom: \"2px solid red\" };\n  }\n\n  switch (type) {\n    case \"email\":\n      //Input type email\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor=\"email\">{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id=\"email\"\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"number\":\n      //Input type number\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={\"text\"}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"password\":\n      //Input type password\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    default:\n      //Input type text\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            type=\"text\"\n            {...rest} //input value and onChange atributes\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Input_InputContainer__3-grW\",\"Input\":\"Input_Input__bZUEZ\",\"Tooltip\":\"Input_Tooltip__1uJvh\",\"TooltipText\":\"Input_TooltipText__1VF9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"SignUpForm_Background__2A8BP\",\"FormContainer\":\"SignUpForm_FormContainer__3XNy7\",\"Message\":\"SignUpForm_Message__3k1Be\",\"checkMail\":\"SignUpForm_checkMail__3_w7-\",\"Button\":\"SignUpForm_Button__1bUT-\",\"ButtonDisabled\":\"SignUpForm_ButtonDisabled__2pYbI\"};"],"sourceRoot":""}