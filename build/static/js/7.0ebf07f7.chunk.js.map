{"version":3,"sources":["component/FormContainer/ResetPassForm/ResetPassForm.js","component/FormContainer/FormContainer.js","component/FormContainer/FormContainer.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","component/Input/Input.js","component/Input/Input.module.css","component/FormContainer/ResetPassForm/ResetPassForm.module.css"],"names":["ResetPassForm","token","useParams","history","useHistory","useUser","loginData","handleResetPassword","useState","succeed","setSucceed","message","setMessage","password","useInputData","passwordConfirmation","value","useEffect","timer","setTimeout","clearTimeout","label","style","marginBottom","className","classes","Message","color","loading","text","classFromProps","Button","onClick","push","isValid","ButtonDisabled","e","a","preventDefault","response","FormContainer","props","Background","children","module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Input","type","error","rest","check","borderBottom","InputContainer","htmlFor","id","Tooltip","TooltipText","join"],"mappings":"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","file":"static/js/7.0ebf07f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { useUser } from \"../../../context/userContext\";\nimport { useInputData } from \"../../../utils/customHooks\";\nimport FormContainer from \"../FormContainer\";\nimport Button from \"../../Button/Button\";\nimport Input from \"../../Input/Input\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport classes from \"./ResetPassForm.module.css\";\n\nconst ResetPassForm = () => {\n  // get token from url param\n  const { token } = useParams();\n\n  const history = useHistory();\n\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData, handleResetPassword } = useUser();\n\n  // reset pass succeed\n  const [succeed, setSucceed] = useState(false);\n\n  // message state from fetch response\n  const [message, setMessage] = useState(null);\n\n  // customHook useInputData returns: type, value, onChange handler, isValid and validation errors\n  const password = useInputData(\"password\", true); //second argument true for validation\n  const passwordConfirmation = useInputData(\"password\", true, password.value); //second argument true for validation\n\n  useEffect(() => {\n    if (message) {\n      // clears message after 3s\n      const timer = setTimeout(() => {\n        setMessage(null);\n      }, 3000);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [message]);\n\n  return (\n    <FormContainer>\n      <Input {...password} label={\"New Password\"} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <Input {...passwordConfirmation} label={\"Repeat new Password\"} />\n      <br style={{ marginBottom: \"3rem\" }} />\n      <p\n        className={classes.Message}\n        style={{ color: succeed ? \"green\" : \"red\" }}\n      >\n        {loginData.loading ? <Spinner /> : message}\n      </p>\n      {succeed ? (\n        // if succeeds show go back button\n        <Button\n          text=\"Go back\"\n          classFromProps={classes.Button}\n          onClick={() =>\n            loginData.token\n              ? history.push(\"/app/account\")\n              : history.push(\"/auth/login\")\n          }\n        />\n      ) : (\n        <Button\n          text=\"Reset password\"\n          classFromProps={\n            password.isValid && passwordConfirmation.isValid\n              ? classes.Button\n              : classes.ButtonDisabled\n          }\n          onClick={\n            // allows on click if password and password confirmation are valid, and loading = false\n            password.isValid &&\n            passwordConfirmation.isValid &&\n            !loginData.loading\n              ? async (e) => {\n                  e.preventDefault();\n                  const response = await handleResetPassword(\n                    token,\n                    password.value,\n                    passwordConfirmation.value\n                  );\n                  setSucceed(response.succeed);\n                  setMessage(response.message);\n                }\n              : (e) => e.preventDefault()\n          }\n        />\n      )}\n    </FormContainer>\n  );\n};\n\nexport default ResetPassForm;\n","import React from \"react\";\n\nimport classes from \"./FormContainer.module.css\";\n\nconst FormContainer = (props) => {\n  return (\n    <>\n      <div className={classes.Background}></div>\n      <form className={classes.FormContainer}>{props.children}</form>\n    </>\n  );\n};\n\nexport default FormContainer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"FormContainer_Background__2lPQo\",\"FormContainer\":\"FormContainer_FormContainer__1rPIB\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst Input = (props) => {\n  /*\nRecives:\n -tpye: input type\n -label : input label text\n -isValid: validation checked\n -error: array of validation errors\n -rest: input value and onChange handler\n*/\n  const { type, label, isValid, error, ...rest } = props;\n\n  // add style if recives isValid\n  let check = {};\n  if (isValid === true) {\n    check = { borderBottom: \"2px solid blue\" };\n  } else if (isValid === false) {\n    check = { borderBottom: \"2px solid red\" };\n  }\n\n  switch (type) {\n    case \"email\":\n      //Input type email\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor=\"email\">{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id=\"email\"\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"number\":\n      //Input type number\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={\"text\"}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"password\":\n      //Input type password\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    default:\n      //Input type text\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            type=\"text\"\n            {...rest} //input value and onChange atributes\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Input_InputContainer__3-grW\",\"Input\":\"Input_Input__bZUEZ\",\"Tooltip\":\"Input_Tooltip__1uJvh\",\"TooltipText\":\"Input_TooltipText__1VF9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ResetPassForm_Button__2-gLr\",\"ButtonDisabled\":\"ResetPassForm_ButtonDisabled__1DnIi\",\"Message\":\"ResetPassForm_Message__3Vwl8\"};"],"sourceRoot":""}