{"version":3,"sources":["component/UI/Card/CartCard/CartCard.module.css","containers/ShoppingCart/ShoppingCart.module.css","component/UI/Card/CartCard/CartCard.js","containers/ShoppingCart/ShoppingCart.js"],"names":["module","exports","CartCard","props","name","img","description","price","id","quantity","addProductHandler","delProductHandler","loginData","useUser","useState","isLoading","setIsLoading","amount","setAmount","useEffect","handleSubmitOnEnter","e","a","preventDefault","newAmount","target","userInput","value","parseInt","token","handleSubmitOnOk","className","classes","Container","style","position","right","top","Spinner","small","display","flexGrow","ImageContainer","src","alt","Image","InfoContainer","capitalizeName","includes","ButtonsContainer","Button","text","classFromProps","ButtonRemove","onClick","onSubmit","type","min","Input","onChange","ButtonAdd","ButtonOk","PriceAndDelete","Price","color","fontSize","toFixed","ButtonDel","ShoppingCart","useCart","cartItems","loaded","loading","setLoading","totalPrice","setTotalPrice","length","map","el","reduce","acc","cur","history","useHistory","Head","SpinnerContainer","key","TotalPriceContainer","ButtonCheckout","push","EmptyCart"],"mappings":"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","file":"static/js/13.47fe1f93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"CartCard_Container__wlIIh\",\"ImageContainer\":\"CartCard_ImageContainer__1kVoV\",\"Image\":\"CartCard_Image__1oueZ\",\"InfoContainer\":\"CartCard_InfoContainer__J3_3s\",\"ButtonsContainer\":\"CartCard_ButtonsContainer__1eo3o\",\"Input\":\"CartCard_Input__2z1v_\",\"ButtonOk\":\"CartCard_ButtonOk__2y3Ia\",\"ButtonAdd\":\"CartCard_ButtonAdd__1aIqy\",\"ButtonRemove\":\"CartCard_ButtonRemove__17GRf\",\"PriceAndDelete\":\"CartCard_PriceAndDelete__2LgU9\",\"Price\":\"CartCard_Price__1AzED\",\"ButtonDel\":\"CartCard_ButtonDel__I0cMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Head\":\"ShoppingCart_Head__3eq0D\",\"Container\":\"ShoppingCart_Container__1UJev\",\"SpinnerContainer\":\"ShoppingCart_SpinnerContainer__19yyP\",\"TotalPriceContainer\":\"ShoppingCart_TotalPriceContainer__2vdrP\",\"EmptyCart\":\"ShoppingCart_EmptyCart__66KYI\",\"Price\":\"ShoppingCart_Price__XgF82\",\"ButtonCheckout\":\"ShoppingCart_ButtonCheckout__28EdD\"};","import React, { useState, useEffect } from \"react\";\n\nimport { capitalizeName } from \"../../../../utils/helpers\";\nimport { useUser } from \"../../../../context/userContext\";\nimport Button from \"../../../Button/Button\";\nimport Spinner from \"../../Spinner/Spinner\";\nimport classes from \"./CartCard.module.css\";\n\nconst CartCard = (props) => {\n  /*\nRecives:\n -name: product name\n -img: img url\n -description: product description\n -price: product price\n -id: product id\n -quantity: product quantity retrived from the cart\n -addProductHandler: add product to the cart\n -delProductHandler: remove product from the cart\n*/\n  const {\n    name,\n    img,\n    description,\n    price,\n    id,\n    quantity,\n    addProductHandler,\n    delProductHandler,\n  } = props;\n\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData } = useUser();\n\n  // loading state for spinner\n  const [isLoading, setIsLoading] = useState(false);\n\n  // amount state for fetch\n  const [amount, setAmount] = useState(quantity);\n\n  useEffect(() => {\n    // set amount to quantity retrived from the cart\n    setAmount(quantity);\n  }, [quantity]);\n\n  const handleSubmitOnEnter = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    const newAmount = e.target.userInput.value - quantity;\n    // if user input <= 0, delete product from cart\n    parseInt(e.target.userInput.value) <= 0\n      ? await delProductHandler(id, loginData.token)\n      : await addProductHandler(id, newAmount, loginData.token);\n    setIsLoading(false);\n  };\n\n  const handleSubmitOnOk = async (value) => {\n    setIsLoading(true);\n    const newAmount = value - quantity;\n    // if user input <= 0, delete product from cart\n    parseInt(value) <= 0\n      ? await delProductHandler(id, loginData.token)\n      : await addProductHandler(id, newAmount, loginData.token);\n    setIsLoading(false);\n  };\n\n  return (\n    <div className={classes.Container}>\n      {/* show spinner if isLoading = true */}\n      <div style={{ position: \"absolute\", right: \"1rem\", top: \"1rem\" }}>\n        {isLoading && <Spinner small={true} />}\n      </div>\n\n      <div style={{ display: \"flex\", flexGrow: \"1\" }}>\n        {/* product image */}\n        <div className={classes.ImageContainer}>\n          <img src={`/${img}`} alt={name} className={classes.Image} />\n        </div>\n\n        {/* product info */}\n        <div className={classes.InfoContainer}>\n          {capitalizeName(name)}\n          {img.includes(\"vegetables\") || img.includes(\"fruits\")\n            ? \" x kg\"\n            : img.includes(\"spices\")\n            ? \" x 100g\"\n            : null}\n          <p>{description}</p>\n        </div>\n      </div>\n\n      {/* buttons and input */}\n      <div className={classes.ButtonsContainer}>\n        <Button\n          text=\"-\"\n          classFromProps={classes.ButtonRemove}\n          onClick={\n            // allows onClick if isLoading = false\n            !isLoading\n              ? quantity > 1\n                ? async () => {\n                    setIsLoading(true);\n                    await addProductHandler(id, -1, loginData.token);\n                    setIsLoading(false);\n                  }\n                : async () => {\n                    setIsLoading(true);\n                    await delProductHandler(id, loginData.token);\n                  }\n              : null\n          }\n        />\n\n        <form onSubmit={handleSubmitOnEnter}>\n          <input\n            type=\"number\"\n            name=\"userInput\"\n            min=\"0\"\n            className={classes.Input}\n            value={amount}\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          />\n        </form>\n\n        <Button\n          text=\"+\"\n          classFromProps={classes.ButtonAdd}\n          onClick={\n            // allows onClick if isLoading = false\n            !isLoading\n              ? async () => {\n                  setIsLoading(true);\n                  await addProductHandler(id, 1, loginData.token);\n                  setIsLoading(false);\n                }\n              : null\n          }\n        />\n\n        {/* if user inputs value (amount), show ok button to fetch new quantity  */}\n        {quantity !== amount && (\n          <span\n            className={classes.ButtonOk}\n            onClick={() => handleSubmitOnOk(amount)}\n          >\n            &#10003;\n          </span>\n        )}\n      </div>\n\n      <div className={classes.PriceAndDelete}>\n        {/* price */}\n        <div className={classes.Price}>\n          <p\n            style={{ color: \"#888888\", fontSize: \"1.5rem\" }}\n          >{`$ ${price} x ${quantity}`}</p>\n          <p>$ {(price * quantity).toFixed(2)}</p>\n        </div>\n\n        {/* remove product button */}\n        <Button\n          text=\"X\"\n          classFromProps={classes.ButtonDel}\n          onClick={\n            // allows onClick if isLoading = false\n            !isLoading\n              ? async () => {\n                  setIsLoading(true);\n                  await delProductHandler(id, loginData.token);\n                }\n              : null\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CartCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useCart } from \"../../context/cartContext\";\nimport CartCard from \"../../component/UI/Card/CartCard/CartCard\";\nimport Button from \"../../component/Button/Button\";\nimport Spinner from \"../../component/UI/Spinner/Spinner\";\nimport classes from \"./ShoppingCart.module.css\";\n\nconst ShoppingCart = () => {\n  // customHook for cart context\n  // cartItems = [array of items]\n  // addProductHandler: add to cart\n  // delProductHandler: remove from cart\n  const { cartItems, loaded, addProductHandler, delProductHandler } = useCart();\n\n  const [loading, setLoading] = useState(true);\n  const [totalPrice, setTotalPrice] = useState(null);\n\n  useEffect(() => {\n    // if cart has loaded\n    if (loaded) {\n      // if has items, set price\n      if (cartItems.length > 0) {\n        setTotalPrice(\n          cartItems\n            .map((el) => el.price * el.quantity)\n            .reduce((acc, cur) => acc + cur)\n        );\n        setLoading(false);\n\n        // if it has no items, set price = null\n      } else {\n        setTotalPrice(null);\n        setLoading(false);\n      }\n    }\n  }, [cartItems, loaded]);\n\n  const history = useHistory();\n  return (\n    <>\n      <div className={classes.Head}></div>\n\n      <div className={classes.Container}>\n        {/* shows spinner when loading */}\n        {loading ? (\n          <div className={classes.SpinnerContainer}>\n            <Spinner />\n          </div>\n        ) : (\n          <>\n            {/* cart products */}\n            {cartItems.map((el) => (\n              <CartCard\n                key={el.name}\n                {...el}\n                addProductHandler={addProductHandler}\n                delProductHandler={delProductHandler}\n              />\n            ))}\n\n            {/* total price */}\n            {totalPrice ? (\n              <div className={classes.TotalPriceContainer}>\n                <p>Total</p>\n                <p className={classes.Price}>{`$ ${totalPrice.toFixed(2)}`}</p>\n                <Button\n                  text=\"Proced to checkout\"\n                  classFromProps={classes.ButtonCheckout}\n                  onClick={() => history.push(\"/app/checkout\")}\n                />\n              </div>\n            ) : (\n              // if the are no items in the cart\n              <div className={classes.EmptyCart}>\n                <p>Your cart is empty</p>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ShoppingCart;\n"],"sourceRoot":""}