{"version":3,"sources":["component/FormContainer/GoogleForm/GoogleForm.module.css","component/FormContainer/GoogleForm/GoogleForm.js","component/FormContainer/FormContainer.js","component/FormContainer/FormContainer.module.css"],"names":["module","exports","GoogleForm","search","useLocation","useUser","loginData","handleLoginGoogle","useState","message","setMessage","succeed","setSucceed","history","useHistory","useEffect","push","then","response","loading","className","classes","Message","style","color","Failed","FormContainer","props","Background","children"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,6B,oHC6DtFC,UAtDI,WAAM,IAEfC,EAAWC,cAAXD,OAFe,EAMkBE,cAAjCC,EANe,EAMfA,UAAWC,EANI,EAMJA,kBANI,EASOC,mBAAS,MAThB,mBAShBC,EATgB,KASPC,EATO,OAYOF,oBAAS,GAZhB,mBAYhBG,EAZgB,KAYPC,EAZO,KAcjBC,EAAUC,cAkBhB,OAhBAC,qBAAU,WACR,IAAKZ,EACH,OAAOU,EAAQG,KAAK,KAItBT,EAAkBJ,GAAQc,MAAK,SAACC,GAC9B,GAAIA,EAASP,QAEX,OAAOE,EAAQG,KAAK,KAEtBJ,GAAW,GACXF,EAAWQ,EAAST,cAErB,CAACF,EAAmBJ,EAAQU,IAG7B,kBAAC,IAAD,KAEGP,EAAUa,QACT,kBAAC,IAAD,MAEA,oCACE,uBACEC,UAAWC,IAAQC,QACnBC,MAAO,CACLC,MAAOb,EAAU,QAAU,QAG5BF,GAEH,uBAAGW,UAAWC,IAAQI,QAAtB,yB,gCCvDV,qCAaeC,IATO,SAACC,GACrB,OACE,oCACE,yBAAKP,UAAWC,IAAQO,aACxB,0BAAMR,UAAWC,IAAQK,eAAgBC,EAAME,a,mBCPrD7B,EAAOC,QAAU,CAAC,WAAa,kCAAkC,cAAgB","file":"static/js/10.50cb214b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"GoogleForm_Message__1Y9ZX\",\"Button\":\"GoogleForm_Button__kuGtP\",\"Failed\":\"GoogleForm_Failed__2e5kZ\"};","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { useUser } from \"../../../context/userContext\";\nimport FormContainer from \"../FormContainer\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport classes from \"./GoogleForm.module.css\";\n\nconst GoogleForm = () => {\n  // get token from url param\n  const { search } = useLocation();\n\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData, handleLoginGoogle } = useUser();\n\n  // message state from fetch response\n  const [message, setMessage] = useState(null);\n\n  // account activation succeed\n  const [succeed, setSucceed] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!search) {\n      return history.push(\"/\");\n    }\n\n    //   sends google redirect code query param\n    handleLoginGoogle(search).then((response) => {\n      if (response.succeed) {\n        // if login succeed, redirects to \"/\"\n        return history.push(\"/\");\n      }\n      setSucceed(false);\n      setMessage(response.message);\n    });\n  }, [handleLoginGoogle, search, history]);\n\n  return (\n    <FormContainer>\n      {/* shows spinner if loading = true */}\n      {loginData.loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <p\n            className={classes.Message}\n            style={{\n              color: succeed ? \"green\" : \"red\",\n            }}\n          >\n            {message}\n          </p>\n          <p className={classes.Failed}>Please try again!</p>\n        </>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default GoogleForm;\n","import React from \"react\";\n\nimport classes from \"./FormContainer.module.css\";\n\nconst FormContainer = (props) => {\n  return (\n    <>\n      <div className={classes.Background}></div>\n      <form className={classes.FormContainer}>{props.children}</form>\n    </>\n  );\n};\n\nexport default FormContainer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"FormContainer_Background__2lPQo\",\"FormContainer\":\"FormContainer_FormContainer__1rPIB\"};"],"sourceRoot":""}