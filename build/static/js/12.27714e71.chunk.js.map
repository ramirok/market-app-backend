{"version":3,"sources":["component/UI/Card/OrderCard/OrderCard.module.css","containers/Orders/Orders.module.css","component/UI/Card/OrderCard/OrderCard.js","containers/Orders/Orders.js"],"names":["module","exports","OrderCard","props","products","createdAt","total","map","el","data","price","quantity","reduce","acc","curr","className","classes","CardContainer","ProductContainer","key","name","ImagesContainer","src","img","alt","Image","ProductInfo","capitalizeName","description","style","fontWeight","textAlign","toFixed","PriceTotal","Date","toLocaleString","Orders","loginData","useUser","useState","orders","setOrders","loading","setLoading","useEffect","token","fetchService","then","Array","Head","Container","SpinnerContainer","Spinner","length","index","NoOrders"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,iBAAmB,oCAAoC,gBAAkB,mCAAmC,MAAQ,yBAAyB,YAAc,+BAA+B,WAAa,gC,oBCA1QD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,iBAAmB,iCAAiC,SAAW,2B,mHC0DpIC,EAtDG,SAACC,GAAU,IAMnBC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,UAGZC,EAAQF,EACXG,KAAI,SAACC,GAAD,OAAQA,EAAGC,KAAKC,MAAQF,EAAGG,YAC/BC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,KAE/B,OACE,yBAAKC,UAAWC,IAAQC,eACrBb,EAASG,KAAI,SAACC,GAAD,OACZ,yBAAKO,UAAWC,IAAQE,iBAAkBC,IAAKX,EAAGC,KAAKW,MAErD,yBAAKL,UAAWC,IAAQK,iBACtB,yBACEC,IAAG,WAAMd,EAAGC,KAAKc,KACjBC,IAAKhB,EAAGC,KAAKW,KACbL,UAAWC,IAAQS,SAKvB,yBAAKV,UAAWC,IAAQU,aACtB,2BAAIC,YAAenB,EAAGC,KAAKW,OAC3B,2BAAIZ,EAAGC,KAAKmB,cAId,6BACE,uBAAGC,MAAO,CAAEC,WAAY,QAAxB,KACKtB,EAAGC,KAAKC,MADb,KACsBF,EAAGG,UAEzB,uBAAGkB,MAAO,CAAEE,UAAW,QAAvB,MACMvB,EAAGC,KAAKC,MAAQF,EAAGG,UAAUqB,QAAQ,SAOjD,uBAAGjB,UAAWC,IAAQiB,YAAtB,YAA4C3B,EAAM0B,QAAQ,IAG1D,uBAAGH,MAAO,CAAEC,WAAY,QACrB,IAAII,KAAK7B,GAAW8B,oB,kBCHdC,UA3CA,WAAM,IAGXC,EAAcC,cAAdD,UAHW,EAMSE,mBAAS,IANlB,mBAMZC,EANY,KAMJC,EANI,OASWF,oBAAS,GATpB,mBASZG,EATY,KASHC,EATG,KAsBnB,OAXAC,qBAAU,WACJP,EAAUQ,OAEZC,YAAa,MAAO,eAAgBT,EAAUQ,OAAOE,MAAK,SAACtC,GAEzDA,aAAgBuC,OAASP,EAAUhC,GACnCkC,GAAW,QAGd,CAACN,EAAUQ,QAGZ,oCACE,yBAAK9B,UAAWC,IAAQiC,OACxB,yBAAKlC,UAAWC,IAAQkC,WACrBR,EACC,yBAAK3B,UAAWC,IAAQmC,kBACtB,kBAACC,EAAA,EAAD,OAEAZ,EAAOa,OAAS,EAClBb,EAAOjC,KAAI,SAACC,EAAI8C,GAAL,OAAe,kBAAC,EAAD,eAAWnC,IAAKmC,GAAW9C,OAGrD,yBAAKO,UAAWC,IAAQuC,UACtB","file":"static/js/12.27714e71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"OrderCard_CardContainer__1ogEh\",\"ProductContainer\":\"OrderCard_ProductContainer__ei8Aa\",\"ImagesContainer\":\"OrderCard_ImagesContainer__2ltMN\",\"Image\":\"OrderCard_Image__3l5NN\",\"ProductInfo\":\"OrderCard_ProductInfo__3hwYx\",\"PriceTotal\":\"OrderCard_PriceTotal__33DK8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Head\":\"Orders_Head__3YPPA\",\"Container\":\"Orders_Container__3JU0G\",\"SpinnerContainer\":\"Orders_SpinnerContainer__9HNAl\",\"NoOrders\":\"Orders_NoOrders__kn6EG\"};","import React from \"react\";\n\nimport { capitalizeName } from \"../../../../utils/helpers\";\nimport classes from \"./OrderCard.module.css\";\n\nconst OrderCard = (props) => {\n  /*\nRecives:\n -products: array of purchased products\n -createdAt: date of purchase\n*/\n  const { products, createdAt } = props;\n\n  // cart total\n  const total = products\n    .map((el) => el.data.price * el.quantity)\n    .reduce((acc, curr) => acc + curr);\n\n  return (\n    <div className={classes.CardContainer}>\n      {products.map((el) => (\n        <div className={classes.ProductContainer} key={el.data.name}>\n          {/* product image */}\n          <div className={classes.ImagesContainer}>\n            <img\n              src={`/${el.data.img}`}\n              alt={el.data.name}\n              className={classes.Image}\n            />\n          </div>\n\n          {/* product info */}\n          <div className={classes.ProductInfo}>\n            <p>{capitalizeName(el.data.name)}</p>\n            <p>{el.data.description}</p>\n          </div>\n\n          {/* product price and quantity */}\n          <div>\n            <p style={{ fontWeight: \"400\" }}>\n              $ {el.data.price} x{el.quantity}\n            </p>\n            <p style={{ textAlign: \"end\" }}>\n              $ {(el.data.price * el.quantity).toFixed(2)}\n            </p>\n          </div>\n        </div>\n      ))}\n\n      {/* cart total */}\n      <p className={classes.PriceTotal}>Total: $ {total.toFixed(2)}</p>\n\n      {/* date of purchase */}\n      <p style={{ fontWeight: \"400\" }}>\n        {new Date(createdAt).toLocaleString()}\n      </p>\n    </div>\n  );\n};\nexport default OrderCard;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useUser } from \"../../context/userContext\";\nimport { fetchService } from \"../../utils/fetchServices\";\nimport Spinner from \"../../component/UI/Spinner/Spinner\";\nimport OrderCard from \"../../component/UI/Card/OrderCard/OrderCard\";\nimport classes from \"./Orders.module.css\";\n\nconst Orders = () => {\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData } = useUser();\n\n  // orders to show\n  const [orders, setOrders] = useState([]);\n\n  // loading state\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (loginData.token) {\n      // fetch orders\n      fetchService(\"get\", \"users/orders\", loginData.token).then((data) => {\n        // set orders if response is an array\n        data instanceof Array && setOrders(data);\n        setLoading(false);\n      });\n    }\n  }, [loginData.token]);\n\n  return (\n    <>\n      <div className={classes.Head}></div>\n      <div className={classes.Container}>\n        {loading ? (\n          <div className={classes.SpinnerContainer}>\n            <Spinner />\n          </div>\n        ) : orders.length > 0 ? (\n          orders.map((el, index) => <OrderCard key={index} {...el} />)\n        ) : (\n          // if no orders:\n          <div className={classes.NoOrders}>\n            <p>No orders yet...</p>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}