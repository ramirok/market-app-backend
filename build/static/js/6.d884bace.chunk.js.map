{"version":3,"sources":["component/FormContainer/LoginForm/LoginForm.js","component/FormContainer/FormContainer.js","component/FormContainer/FormContainer.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","component/Input/Input.js","component/Input/Input.module.css","component/FormContainer/LoginForm/LoginForm.module.css"],"names":["LoginForm","useUser","loginData","handleLogin","history","useHistory","useState","message","setMessage","email","useInputData","password","googleLink","setGoogleLink","useEffect","fetchService","then","data","url","timer","setTimeout","clearTimeout","label","style","marginBottom","className","classes","Message","loading","text","classFromProps","isValid","value","ButtonLogin","ButtonLoginDisabled","onClick","e","a","response","succeed","push","preventDefault","href","Link","ButtonForgot","FormContainer","props","Background","children","module","exports","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Input","type","error","rest","check","borderBottom","InputContainer","htmlFor","id","Tooltip","TooltipText","join"],"mappings":"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","file":"static/js/6.d884bace.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useUser } from \"../../../context/userContext\";\nimport { useInputData } from \"../../../utils/customHooks\";\nimport { fetchService } from \"../../../utils/fetchServices\";\nimport Input from \"../../Input/Input\";\nimport Button from \"../../Button/Button\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport FormContainer from \"../FormContainer\";\nimport classes from \"./LoginForm.module.css\";\n\nconst LoginForm = () => {\n  // customHook for user context:\n  // loginData returns ={name, email, token}\n  const { loginData, handleLogin } = useUser();\n\n  const history = useHistory();\n\n  // message state from fetch response\n  const [message, setMessage] = useState(null);\n\n  // customHook useInputData returns: type, value, onChange handler, isValid and validation errors\n  const email = useInputData(\"email\", true); //second argument true for validation\n  const password = useInputData(\"password\");\n\n  // google link\n  const [googleLink, setGoogleLink] = useState(\"\");\n\n  useEffect(() => {\n    // fetches and sets google link\n    fetchService(\"get\", \"users/login/google\").then((data) =>\n      setGoogleLink(data.url)\n    );\n  }, []);\n\n  useEffect(() => {\n    if (message) {\n      // clears message after 3 seconds\n      const timer = setTimeout(() => {\n        setMessage(null);\n      }, 3000);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [message]);\n  return (\n    <FormContainer>\n      <>\n        <Input {...email} label={\"Email\"} />\n        <br style={{ marginBottom: \"3rem\" }} />\n        <Input {...password} label={\"Password\"} />\n        <p className={classes.Message}>\n          {loginData.loading ? <Spinner /> : message}\n        </p>\n        <Button\n          text=\"Login\"\n          classFromProps={\n            email.isValid && password.value\n              ? classes.ButtonLogin\n              : classes.ButtonLoginDisabled\n          }\n          onClick={\n            // allows on click if email is a valid email address, pasword has value and loading = false\n            email.isValid && password.value && !loginData.loading\n              ? async (e) => {\n                  // if login succeeds, redirects to \"/\"\n                  const response = await handleLogin(\n                    e,\n                    email.value,\n                    password.value\n                  );\n                  setMessage(response.message);\n                  response.succeed && history.push(\"/\");\n                }\n              : (e) => e.preventDefault()\n          }\n        />\n        <br style={{ marginBottom: \"3rem\" }} />\n\n        {/* login with google button */}\n        <a href={googleLink} className={classes.Link}>\n          Login with Google\n        </a>\n\n        <br style={{ marginBottom: \"3rem\" }} />\n        <Button\n          text=\"Forgot password?\"\n          classFromProps={classes.ButtonForgot}\n          onClick={(e) => {\n            e.preventDefault();\n            history.push(\"/auth/forgot\");\n          }}\n        />\n      </>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\n\nimport classes from \"./FormContainer.module.css\";\n\nconst FormContainer = (props) => {\n  return (\n    <>\n      <div className={classes.Background}></div>\n      <form className={classes.FormContainer}>{props.children}</form>\n    </>\n  );\n};\n\nexport default FormContainer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"FormContainer_Background__2lPQo\",\"FormContainer\":\"FormContainer_FormContainer__1rPIB\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst Input = (props) => {\n  /*\nRecives:\n -tpye: input type\n -label : input label text\n -isValid: validation checked\n -error: array of validation errors\n -rest: input value and onChange handler\n*/\n  const { type, label, isValid, error, ...rest } = props;\n\n  // add style if recives isValid\n  let check = {};\n  if (isValid === true) {\n    check = { borderBottom: \"2px solid blue\" };\n  } else if (isValid === false) {\n    check = { borderBottom: \"2px solid red\" };\n  }\n\n  switch (type) {\n    case \"email\":\n      //Input type email\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor=\"email\">{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id=\"email\"\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"number\":\n      //Input type number\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={\"text\"}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    case \"password\":\n      //Input type password\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            {...rest} //input value and onChange atributes\n            type={type}\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n    default:\n      //Input type text\n\n      return (\n        <div className={classes.InputContainer}>\n          <label htmlFor={label}>{label}</label>\n          <input\n            type=\"text\"\n            {...rest} //input value and onChange atributes\n            id={label}\n            className={classes.Input}\n            style={check}\n          />\n          {/* if isValid = false, shows (!) with tooltip */}\n          {isValid === false && (\n            <div className={classes.Tooltip}>\n              !<span className={classes.TooltipText}>{error.join(\".\\n\")}</span>\n            </div>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Input_InputContainer__3-grW\",\"Input\":\"Input_Input__bZUEZ\",\"Tooltip\":\"Input_Tooltip__1uJvh\",\"TooltipText\":\"Input_TooltipText__1VF9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"LoginForm_Message__2_8yk\",\"ButtonLogin\":\"LoginForm_ButtonLogin__3F0o4\",\"Link\":\"LoginForm_Link__1Cu0J\",\"ButtonLoginDisabled\":\"LoginForm_ButtonLoginDisabled__amDYy\",\"ButtonForgot\":\"LoginForm_ButtonForgot__1_xgJ\"};"],"sourceRoot":""}